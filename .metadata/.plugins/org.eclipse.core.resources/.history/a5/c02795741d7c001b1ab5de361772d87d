package com.my.controller;

import static org.springframework.test.web.client.match.MockRestRequestMatchers.queryParam;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import lombok.extern.log4j.Log4j;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({"file:src/main/webapp/WEB-INF/spring/root-context.xml",
		               "file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml"})
@Log4j
@WebAppConfiguration
public class BoardControllerTest {

	@Autowired
	private WebApplicationContext wac;
	
	private MockMvc mm;
	
	@Before
	public void setup() {
		this.mm = MockMvcBuilders.webAppContextSetup(wac).build();
	}
	
//	@Test
	public void testGetList() throws Exception{
		
		log.info(
			mm.perform(MockMvcRequestBuilders.get("/board/getList"))
		   .andReturn().getModelAndView().getModelMap()
		);
	}

	@Test
	public void testRegister() throws Exception{
		
		String result = mm.perform(MockMvcRequestBuilders.post("/board/register")
						  .param("btitle", "컨트롤러 제목입니다")
						  .param("bcontent", "컨트롤러 내용입니다")
						  .param("bid", "happy")
						).andReturn().getModelAndView().getViewName();
		log.info(result);
	}
	
//	@Test
	public void testShowDetail() throws Exception{
		
		log.info(
			mm.perform(MockMvcRequestBuilders.get("/board/showDetail").param("bno", "2"))
		   .andReturn().getModelAndView().getModelMap()
		);
		
	}
	
	@Test
	public void testEditBoard() {
		
		String result = mm.perform(MockMvcRequestBuilders.post("/board/editBoard")
						  .param("btitle", "수정된 제목입니다")
						  .param("bcontent", "수정된 내용입니다")
					    ).andReturn().getModelAndView().getViewName();
		
	}
} //end of BoardControllerTest
