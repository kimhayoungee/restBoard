package com.my.controller;

import java.io.File;
import java.io.FileOutputStream;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.my.domain.AttachVO;

import lombok.extern.log4j.Log4j;
import net.coobird.thumbnailator.Thumbnailator;

@Controller
@Log4j
public class UploadController {

	@PostMapping(value="/uploadAjaxAction", produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public ResponseEntity<List<AttachVO>> uploadAjaxPost(MultipartFile[] uploadFile) {
		String uploadFolder = "D:\\upload";
		File uploadPath = new File(uploadFolder, getFolder());
		log.info("업로드 path : " + uploadPath);
		if(uploadPath.exists() ==false) {
			uploadPath.mkdir();
		}
		
		for(MultipartFile mf : uploadFile) {
			log.info("---");
			log.info("upload file 이름 : " + mf.getOriginalFilename());
			log.info("upload file 크기 : " + mf.getSize());
			
			String uploadFileName = mf.getOriginalFilename();
			
			//IE has file path
			uploadFileName = uploadFileName.substring(uploadFileName.lastIndexOf("\\") + 1);
			log.info("파일이름만 확인 : " + uploadFileName);
			
			UUID uuid = UUID.randomUUID();
			uploadFileName = uuid.toString() + "_" + uploadFileName;
			
			try {
				File saveFile = new File(uploadFolder, uploadFileName);
				mf.transferTo(saveFile);
				
				if(chkImgType(saveFile)) {
					FileOutputStream thumbnail = new FileOutputStream(new File(uploadPath, "s_" + uploadFileName));
					
					Thumbnailator.createThumbnail(mf.getInputStream(), thumbnail, 100, 100);
					
					thumbnail.close();
				}
			}catch(Exception e) {
				log.error(e.getMessage());
			}
		}
		
	}
	
	private String getFolder() {
		
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		
		Date d = new Date();
		
		String str = sdf.format(d);
		
		return str.replace("-", File.separator);
	}
	
	private boolean chkImgType(File file) {
		
		try {
			String contentType = Files.probeContentType(file.toPath());
			
			return contentType.startsWith("image");
		}catch(Exception e) {
			log.error(e.getMessage());
		}
		
		return false;
	}
	
}
